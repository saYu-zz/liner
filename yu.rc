##########variable#############
YPATH="$HOME/opscript/optool/"
###############################
#         function            #
###############################

#mkdir and cd if success
function mkcd () { 
	mkdir -p "$@" && eval cd "\"\$$#\""; 
}

#pause,interactive
#usage: pause 'Press any key to continue'
function pause(){
   read -p "$*"
}

#减少目录冲突的询问
function yop() {
	local work_dir=$HOME
	local DATE=$(date +%Y%m%d%H)
	if [ -z $1 ]
	then
		mkcd ~/opbin/$DATE && ls -l
	else
		mkcd ~/opbin/$DATE"$1" && ls -l
	fi
}

#full path of the given file
function fpath() {
	local dir=$(dirname "$1")
	local name=$(basename "$1")
	echo $(cd "${dir}" && pwd)/${name}
}

#sms notice me when something done
#usage: notice promt string
#eg:    notice 'yes we are done'
function notice() {
	/bin/gsmsend-script 15011250235@"$*"
}

#格式化,mola系统chunkserver机器
function mfmt() {
	#sort -t'-' -k 3.3,3.5 $1 | awk '{if(NR%3 !=0) printf("%s " ,$0);else print $0}' | column -t
	sort -t'-' -k 3.4,3.5  -k 3.3,3.3 $1 | xargs -n3 | column -t
}

#$1 timestamp . 
#timestamps are the seconds after 1990-1-1
function ctime() {
	date -d "UTC 1970-01-01 $1 secs"
}

function now() {
	echo $(date +%Y%m%d%H%M%S)
}
#$1 hour back from now
#default last hour
function backh() {
	if [[ $# -eq 0 ]]
	then
		date --date="1 hours ago" +%Y%m%d%H
	else
		date --date="$1 hours ago" +%Y%m%d%H
	fi	
}
#$1 day  back from now
#default yesterday
function backd() {
	if [[ $# -eq 0 ]]
	then
		date --date="1 days ago" +%Y%m%d%H
	else
		date --date="$1 days ago" +%Y%m%d%H
	fi	
}

#wget file and md5sum
function wgetm() {
	for file in "$@";
	do
		wget $1 -O $(basename $1) > /dev/null && echo -e "${RED}" $(md5sum $(basename $1)) "${BLK}"
		echo "-----------------------------------------------------------------------------------"
	done
}

#output ANSIC color
#sample for color setting
function color() {
	BLK='\E[1;30m'
	RED='\E[1;31m'
	GRN='\E[1;32m'
	YEL='\E[1;33m'
	BLU='\E[1;34m'
	MAG='\E[1;35m'
	CYN='\E[1;36m'
	WHI='\E[1;37m'
	DRED='\E[0;31m'
	DGRN='\E[0;32m'
	DYEL='\E[0;33m'
	DBLU='\E[0;34m'
	DMAG='\E[0;35m'
	DCYN='\E[0;36m'
	DWHI='\E[0;37m'
	RES='\E[0m'
	
	echo -e "\033[44;31;5m foo \033[0m bar"
	echo -e " 01- ${BLK} BLK ${RES} "
	echo -e " 02- ${RED} RED ${RES} "
	echo -e " 03- ${GRN} GRN ${RES} "
	echo -e " 04- ${YEL} YEL ${RES} "
	echo -e " 05- ${BLU} BLU ${RES} "
	echo -e " 06- ${MAG} MAG ${RES} "
	echo -e " 07- ${CYN} CYN ${RES} "
	echo -e " 08- ${WHI} WHI ${RES} "
	echo -e " 09- ${DRED} DRED ${RES} "
	echo -e " 10- ${DGRN} DGRN ${RES} "
	echo -e " 11- ${DYEL} DYEL ${RES} "
	echo -e " 12- ${DBLU} DBLU ${RES} "
	echo -e " 13- ${DMAG} DMAG ${RES} "
	echo -e " 14- ${DCYN} DCYN ${RES} "
	echo -e " 15- ${DWHI} DWHI ${RES} "
}

function progress() {
    indicator=''
    for ((i=0;$i<=100;i+=1))
    do
      printf "Progress: [%-100s] %d%%\r" $indicator $i
      sleep 0.01
      indicator=${indicator}'.'
    done
    printf "\ndone!\n"
}

##########networking#######################
#ync: yu network connection
#list all the host which is connected to this host
function ync() {
	netstat -tualp 2> /dev/null | awk '{print $5}' | awk -F: '/:/{print $1}' | sort -rn | uniq 
}
##########alias################
alias cd1="cd .."
alias cd2="cd ../.."
alias cd3="cd ../../.."
alias cd4="cd ../../../.."
alias cd5="cd ../../../../.."

###########setting#############
shopt -s cdspell
stty erase ^H
